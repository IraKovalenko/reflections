How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Diff shows only the lines that differ, that's simplify the process of finding bugs comparing to the manual way.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    You can check different versions of the file in order to find mistakes or even go back to your old file if you've totally messed up.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: an ability to name each commit in an appropriate and understandable way; an ability to follow the way of your work and checkout to a certain commit whenever is needed. Cons: human factor: you can forget to seperate logical ending of some task into an exclusive commit or, quite the opposite, make them to often.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Perhaps Google Docs are used for different purposes and files shouldn't be tracked all in one commit.

How can you use the commands git log and git diff to view the history of files?

    We can search for commit log and find that special one that you need, and then compare it with others to find out what was this commit for.

How might using version control make you more confident to make changes that
could break something?

    You know that whenever is needed you can checkout to any commit, see and fix the bug, so you become more confident to make changes.

Now that you have your workspace set up, what do you want to try using Git for?

    Making new alias.
